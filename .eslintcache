[{"C:\\Users\\Aaron\\Desktop\\NotesJS\\frontend\\src\\index.js":"1","C:\\Users\\Aaron\\Desktop\\NotesJS\\frontend\\src\\App.js":"2","C:\\Users\\Aaron\\Desktop\\NotesJS\\frontend\\src\\components\\Notes.js":"3","C:\\Users\\Aaron\\Desktop\\NotesJS\\frontend\\src\\themeConfig.js":"4","C:\\Users\\Aaron\\Desktop\\NotesJS\\frontend\\src\\components\\ResponsiveDrawer.js":"5","C:\\Users\\Aaron\\Desktop\\NotesJS\\frontend\\src\\components\\OutlinedCard.js":"6","C:\\Users\\Aaron\\Desktop\\NotesJS\\frontend\\src\\components\\NewNote.js":"7","C:\\Users\\Aaron\\Desktop\\NotesJS\\frontend\\src\\components\\Note.js":"8","C:\\Users\\Aaron\\Desktop\\NotesJS\\frontend\\src\\config\\axios.js":"9","C:\\Users\\Aaron\\Desktop\\NotesJS\\frontend\\src\\components\\About.js":"10"},{"size":219,"mtime":1612143558295,"results":"11","hashOfConfig":"12"},{"size":1186,"mtime":1613105778840,"results":"13","hashOfConfig":"12"},{"size":3449,"mtime":1613260747426,"results":"14","hashOfConfig":"12"},{"size":362,"mtime":1612317633062,"results":"15","hashOfConfig":"12"},{"size":5096,"mtime":1613103327985,"results":"16","hashOfConfig":"12"},{"size":2268,"mtime":1612940756823,"results":"17","hashOfConfig":"12"},{"size":2984,"mtime":1613286371161,"results":"18","hashOfConfig":"12"},{"size":148,"mtime":1613105321767,"results":"19","hashOfConfig":"12"},{"size":153,"mtime":1612753109242,"results":"20","hashOfConfig":"12"},{"size":148,"mtime":1613101438173,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"114frq",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"C:\\Users\\Aaron\\Desktop\\NotesJS\\frontend\\src\\index.js",[],["44","45"],"C:\\Users\\Aaron\\Desktop\\NotesJS\\frontend\\src\\App.js",[],"C:\\Users\\Aaron\\Desktop\\NotesJS\\frontend\\src\\components\\Notes.js",[],"C:\\Users\\Aaron\\Desktop\\NotesJS\\frontend\\src\\themeConfig.js",[],"C:\\Users\\Aaron\\Desktop\\NotesJS\\frontend\\src\\components\\ResponsiveDrawer.js",["46"],"import React from \"react\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport Hidden from \"@material-ui/core/Hidden\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport NotesIcon from \"@material-ui/icons/Notes\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport NoteAddIcon from \"@material-ui/icons/NoteAdd\";\r\nimport InfoIcon from \"@material-ui/icons/Info\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  drawer: {\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: drawerWidth,\r\n      flexShrink: 0,\r\n    },\r\n  },\r\n  appBar: {\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: `calc(100% - ${drawerWidth}px)`,\r\n      marginLeft: drawerWidth,\r\n    },\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      display: \"none\",\r\n    },\r\n  },\r\n  // necessary for content to be below app bar\r\n  toolbar: theme.mixins.toolbar,\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nfunction ResponsiveDrawer(props) {\r\n  const { window } = props;\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [mobileOpen, setMobileOpen] = React.useState(false);\r\n\r\n  const handleDrawerToggle = () => {\r\n    setMobileOpen(!mobileOpen);\r\n  };\r\n\r\n  const drawer = (\r\n    <div>\r\n      <div className={classes.toolbar} />\r\n      <Divider />\r\n      <List>\r\n        {[\r\n          { text: \"All notes\", page: \"/\", icon: <NotesIcon /> },\r\n          { text: \"New note\", page: \"/new\", icon: <NoteAddIcon /> },\r\n          { text: \"About\", page: \"/about\", icon: <InfoIcon /> },\r\n        ].map((routeInfo) => {\r\n          return (\r\n            <ListItem\r\n              button\r\n              key={routeInfo.text}\r\n              component={Link}\r\n              to={routeInfo.page}\r\n            >\r\n              <ListItemIcon>{routeInfo.icon}</ListItemIcon>\r\n              <ListItemText primary={routeInfo.text} />\r\n            </ListItem>\r\n          );\r\n        })}\r\n      </List>\r\n      <Divider />\r\n      <List>\r\n        {[\"All mail\", \"Trash\", \"Spam\"].map((text, index) => (\r\n          <ListItem button key={text}>\r\n            <ListItemIcon>\r\n              {index % 2 === 0 ? <NotesIcon /> : <NoteAddIcon />}\r\n            </ListItemIcon>\r\n            <ListItemText primary={text} />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n    </div>\r\n  );\r\n\r\n  const container =\r\n    window !== undefined ? () => window().document.body : undefined;\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar position=\"fixed\" className={classes.appBar}>\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            edge=\"start\"\r\n            onClick={handleDrawerToggle}\r\n            className={classes.menuButton}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" noWrap>\r\n            Responsive drawer\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <nav className={classes.drawer} aria-label=\"mailbox folders\">\r\n        {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\r\n        <Hidden smUp implementation=\"css\">\r\n          <Drawer\r\n            container={container}\r\n            variant=\"temporary\"\r\n            anchor={theme.direction === \"rtl\" ? \"right\" : \"left\"}\r\n            open={mobileOpen}\r\n            onClose={handleDrawerToggle}\r\n            classes={{\r\n              paper: classes.drawerPaper,\r\n            }}\r\n            ModalProps={{\r\n              keepMounted: true, // Better open performance on mobile.\r\n            }}\r\n          >\r\n            {drawer}\r\n          </Drawer>\r\n        </Hidden>\r\n        <Hidden xsDown implementation=\"css\">\r\n          <Drawer\r\n            classes={{\r\n              paper: classes.drawerPaper,\r\n            }}\r\n            variant=\"permanent\"\r\n            open\r\n          >\r\n            {drawer}\r\n          </Drawer>\r\n        </Hidden>\r\n      </nav>\r\n      <main className={classes.content}>\r\n        <div className={classes.toolbar} />\r\n\r\n        {props.componentToRender}\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nResponsiveDrawer.propTypes = {\r\n  /**\r\n   * Injected by the documentation to work in an iframe.\r\n   * You won't need it on your project.\r\n   */\r\n  window: PropTypes.func,\r\n};\r\n\r\nexport default ResponsiveDrawer;\r\n","C:\\Users\\Aaron\\Desktop\\NotesJS\\frontend\\src\\components\\OutlinedCard.js",[],"C:\\Users\\Aaron\\Desktop\\NotesJS\\frontend\\src\\components\\NewNote.js",[],"C:\\Users\\Aaron\\Desktop\\NotesJS\\frontend\\src\\components\\Note.js",[],"C:\\Users\\Aaron\\Desktop\\NotesJS\\frontend\\src\\config\\axios.js",[],"C:\\Users\\Aaron\\Desktop\\NotesJS\\frontend\\src\\components\\About.js",[],{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","severity":1,"message":"52","line":22,"column":8,"nodeType":"53","messageId":"54","endLine":22,"endColumn":13},"no-native-reassign",["55"],"no-negated-in-lhs",["56"],"no-unused-vars","'Notes' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]